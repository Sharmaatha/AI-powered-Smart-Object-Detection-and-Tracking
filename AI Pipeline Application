{"cells":[{"cell_type":"code","source":["!pip install ultralytics Flask scikit-learn Flask-ngrok"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vTgYAV1TyTX6","executionInfo":{"status":"ok","timestamp":1757094419097,"user_tz":-330,"elapsed":10217,"user":{"displayName":"Sharmaatha Naren","userId":"01097111190128934197"}},"outputId":"dc47f5a0-2087-4c8e-95a7-9c4868b85036"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: ultralytics in /usr/local/lib/python3.12/dist-packages (8.3.193)\n","Requirement already satisfied: Flask in /usr/local/lib/python3.12/dist-packages (3.1.2)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.12/dist-packages (1.6.1)\n","Requirement already satisfied: Flask-ngrok in /usr/local/lib/python3.12/dist-packages (0.0.25)\n","Requirement already satisfied: numpy>=1.23.0 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (2.0.2)\n","Requirement already satisfied: matplotlib>=3.3.0 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (3.10.0)\n","Requirement already satisfied: opencv-python>=4.6.0 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (4.12.0.88)\n","Requirement already satisfied: pillow>=7.1.2 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (11.3.0)\n","Requirement already satisfied: pyyaml>=5.3.1 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (6.0.2)\n","Requirement already satisfied: requests>=2.23.0 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (2.32.4)\n","Requirement already satisfied: scipy>=1.4.1 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (1.16.1)\n","Requirement already satisfied: torch>=1.8.0 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (2.8.0+cu126)\n","Requirement already satisfied: torchvision>=0.9.0 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (0.23.0+cu126)\n","Requirement already satisfied: psutil in /usr/local/lib/python3.12/dist-packages (from ultralytics) (5.9.5)\n","Requirement already satisfied: py-cpuinfo in /usr/local/lib/python3.12/dist-packages (from ultralytics) (9.0.0)\n","Requirement already satisfied: polars in /usr/local/lib/python3.12/dist-packages (from ultralytics) (1.25.2)\n","Requirement already satisfied: ultralytics-thop>=2.0.0 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (2.0.17)\n","Requirement already satisfied: blinker>=1.9.0 in /usr/local/lib/python3.12/dist-packages (from Flask) (1.9.0)\n","Requirement already satisfied: click>=8.1.3 in /usr/local/lib/python3.12/dist-packages (from Flask) (8.2.1)\n","Requirement already satisfied: itsdangerous>=2.2.0 in /usr/local/lib/python3.12/dist-packages (from Flask) (2.2.0)\n","Requirement already satisfied: jinja2>=3.1.2 in /usr/local/lib/python3.12/dist-packages (from Flask) (3.1.6)\n","Requirement already satisfied: markupsafe>=2.1.1 in /usr/local/lib/python3.12/dist-packages (from Flask) (3.0.2)\n","Requirement already satisfied: werkzeug>=3.1.0 in /usr/local/lib/python3.12/dist-packages (from Flask) (3.1.3)\n","Requirement already satisfied: joblib>=1.2.0 in /usr/local/lib/python3.12/dist-packages (from scikit-learn) (1.5.2)\n","Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.12/dist-packages (from scikit-learn) (3.6.0)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.12/dist-packages (from matplotlib>=3.3.0->ultralytics) (1.3.3)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.12/dist-packages (from matplotlib>=3.3.0->ultralytics) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.12/dist-packages (from matplotlib>=3.3.0->ultralytics) (4.59.2)\n","Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.12/dist-packages (from matplotlib>=3.3.0->ultralytics) (1.4.9)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.12/dist-packages (from matplotlib>=3.3.0->ultralytics) (25.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.12/dist-packages (from matplotlib>=3.3.0->ultralytics) (3.2.3)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.12/dist-packages (from matplotlib>=3.3.0->ultralytics) (2.9.0.post0)\n","Requirement already satisfied: charset_normalizer<4,>=2 in /usr/local/lib/python3.12/dist-packages (from requests>=2.23.0->ultralytics) (3.4.3)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.12/dist-packages (from requests>=2.23.0->ultralytics) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.12/dist-packages (from requests>=2.23.0->ultralytics) (2.5.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.12/dist-packages (from requests>=2.23.0->ultralytics) (2025.8.3)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (3.19.1)\n","Requirement already satisfied: typing-extensions>=4.10.0 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (4.15.0)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (75.2.0)\n","Requirement already satisfied: sympy>=1.13.3 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (1.13.3)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (3.5)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (2025.3.0)\n","Requirement already satisfied: nvidia-cuda-nvrtc-cu12==12.6.77 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (12.6.77)\n","Requirement already satisfied: nvidia-cuda-runtime-cu12==12.6.77 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (12.6.77)\n","Requirement already satisfied: nvidia-cuda-cupti-cu12==12.6.80 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (12.6.80)\n","Requirement already satisfied: nvidia-cudnn-cu12==9.10.2.21 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (9.10.2.21)\n","Requirement already satisfied: nvidia-cublas-cu12==12.6.4.1 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (12.6.4.1)\n","Requirement already satisfied: nvidia-cufft-cu12==11.3.0.4 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (11.3.0.4)\n","Requirement already satisfied: nvidia-curand-cu12==10.3.7.77 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (10.3.7.77)\n","Requirement already satisfied: nvidia-cusolver-cu12==11.7.1.2 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (11.7.1.2)\n","Requirement already satisfied: nvidia-cusparse-cu12==12.5.4.2 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (12.5.4.2)\n","Requirement already satisfied: nvidia-cusparselt-cu12==0.7.1 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (0.7.1)\n","Requirement already satisfied: nvidia-nccl-cu12==2.27.3 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (2.27.3)\n","Requirement already satisfied: nvidia-nvtx-cu12==12.6.77 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (12.6.77)\n","Requirement already satisfied: nvidia-nvjitlink-cu12==12.6.85 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (12.6.85)\n","Requirement already satisfied: nvidia-cufile-cu12==1.11.1.6 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (1.11.1.6)\n","Requirement already satisfied: triton==3.4.0 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (3.4.0)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.12/dist-packages (from python-dateutil>=2.7->matplotlib>=3.3.0->ultralytics) (1.17.0)\n","Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.12/dist-packages (from sympy>=1.13.3->torch>=1.8.0->ultralytics) (1.3.0)\n"]}]},{"cell_type":"code","source":["!pip install ultralytics Flask scikit-learn flask-ngrok"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pVe2Ulbg34Lb","executionInfo":{"status":"ok","timestamp":1757094432124,"user_tz":-330,"elapsed":13020,"user":{"displayName":"Sharmaatha Naren","userId":"01097111190128934197"}},"outputId":"ae2a8276-81a5-4451-8d81-07b57a744559"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: ultralytics in /usr/local/lib/python3.12/dist-packages (8.3.193)\n","Requirement already satisfied: Flask in /usr/local/lib/python3.12/dist-packages (3.1.2)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.12/dist-packages (1.6.1)\n","Requirement already satisfied: flask-ngrok in /usr/local/lib/python3.12/dist-packages (0.0.25)\n","Requirement already satisfied: numpy>=1.23.0 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (2.0.2)\n","Requirement already satisfied: matplotlib>=3.3.0 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (3.10.0)\n","Requirement already satisfied: opencv-python>=4.6.0 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (4.12.0.88)\n","Requirement already satisfied: pillow>=7.1.2 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (11.3.0)\n","Requirement already satisfied: pyyaml>=5.3.1 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (6.0.2)\n","Requirement already satisfied: requests>=2.23.0 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (2.32.4)\n","Requirement already satisfied: scipy>=1.4.1 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (1.16.1)\n","Requirement already satisfied: torch>=1.8.0 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (2.8.0+cu126)\n","Requirement already satisfied: torchvision>=0.9.0 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (0.23.0+cu126)\n","Requirement already satisfied: psutil in /usr/local/lib/python3.12/dist-packages (from ultralytics) (5.9.5)\n","Requirement already satisfied: py-cpuinfo in /usr/local/lib/python3.12/dist-packages (from ultralytics) (9.0.0)\n","Requirement already satisfied: polars in /usr/local/lib/python3.12/dist-packages (from ultralytics) (1.25.2)\n","Requirement already satisfied: ultralytics-thop>=2.0.0 in /usr/local/lib/python3.12/dist-packages (from ultralytics) (2.0.17)\n","Requirement already satisfied: blinker>=1.9.0 in /usr/local/lib/python3.12/dist-packages (from Flask) (1.9.0)\n","Requirement already satisfied: click>=8.1.3 in /usr/local/lib/python3.12/dist-packages (from Flask) (8.2.1)\n","Requirement already satisfied: itsdangerous>=2.2.0 in /usr/local/lib/python3.12/dist-packages (from Flask) (2.2.0)\n","Requirement already satisfied: jinja2>=3.1.2 in /usr/local/lib/python3.12/dist-packages (from Flask) (3.1.6)\n","Requirement already satisfied: markupsafe>=2.1.1 in /usr/local/lib/python3.12/dist-packages (from Flask) (3.0.2)\n","Requirement already satisfied: werkzeug>=3.1.0 in /usr/local/lib/python3.12/dist-packages (from Flask) (3.1.3)\n","Requirement already satisfied: joblib>=1.2.0 in /usr/local/lib/python3.12/dist-packages (from scikit-learn) (1.5.2)\n","Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.12/dist-packages (from scikit-learn) (3.6.0)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.12/dist-packages (from matplotlib>=3.3.0->ultralytics) (1.3.3)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.12/dist-packages (from matplotlib>=3.3.0->ultralytics) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.12/dist-packages (from matplotlib>=3.3.0->ultralytics) (4.59.2)\n","Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.12/dist-packages (from matplotlib>=3.3.0->ultralytics) (1.4.9)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.12/dist-packages (from matplotlib>=3.3.0->ultralytics) (25.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.12/dist-packages (from matplotlib>=3.3.0->ultralytics) (3.2.3)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.12/dist-packages (from matplotlib>=3.3.0->ultralytics) (2.9.0.post0)\n","Requirement already satisfied: charset_normalizer<4,>=2 in /usr/local/lib/python3.12/dist-packages (from requests>=2.23.0->ultralytics) (3.4.3)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.12/dist-packages (from requests>=2.23.0->ultralytics) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.12/dist-packages (from requests>=2.23.0->ultralytics) (2.5.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.12/dist-packages (from requests>=2.23.0->ultralytics) (2025.8.3)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (3.19.1)\n","Requirement already satisfied: typing-extensions>=4.10.0 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (4.15.0)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (75.2.0)\n","Requirement already satisfied: sympy>=1.13.3 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (1.13.3)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (3.5)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (2025.3.0)\n","Requirement already satisfied: nvidia-cuda-nvrtc-cu12==12.6.77 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (12.6.77)\n","Requirement already satisfied: nvidia-cuda-runtime-cu12==12.6.77 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (12.6.77)\n","Requirement already satisfied: nvidia-cuda-cupti-cu12==12.6.80 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (12.6.80)\n","Requirement already satisfied: nvidia-cudnn-cu12==9.10.2.21 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (9.10.2.21)\n","Requirement already satisfied: nvidia-cublas-cu12==12.6.4.1 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (12.6.4.1)\n","Requirement already satisfied: nvidia-cufft-cu12==11.3.0.4 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (11.3.0.4)\n","Requirement already satisfied: nvidia-curand-cu12==10.3.7.77 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (10.3.7.77)\n","Requirement already satisfied: nvidia-cusolver-cu12==11.7.1.2 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (11.7.1.2)\n","Requirement already satisfied: nvidia-cusparse-cu12==12.5.4.2 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (12.5.4.2)\n","Requirement already satisfied: nvidia-cusparselt-cu12==0.7.1 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (0.7.1)\n","Requirement already satisfied: nvidia-nccl-cu12==2.27.3 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (2.27.3)\n","Requirement already satisfied: nvidia-nvtx-cu12==12.6.77 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (12.6.77)\n","Requirement already satisfied: nvidia-nvjitlink-cu12==12.6.85 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (12.6.85)\n","Requirement already satisfied: nvidia-cufile-cu12==1.11.1.6 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (1.11.1.6)\n","Requirement already satisfied: triton==3.4.0 in /usr/local/lib/python3.12/dist-packages (from torch>=1.8.0->ultralytics) (3.4.0)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.12/dist-packages (from python-dateutil>=2.7->matplotlib>=3.3.0->ultralytics) (1.17.0)\n","Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.12/dist-packages (from sympy>=1.13.3->torch>=1.8.0->ultralytics) (1.3.0)\n"]}]},{"cell_type":"code","source":["!pip install Flask-Cors"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AxHym3V3A7OH","executionInfo":{"status":"ok","timestamp":1757094896505,"user_tz":-330,"elapsed":7303,"user":{"displayName":"Sharmaatha Naren","userId":"01097111190128934197"}},"outputId":"e1244a0e-b680-41a1-cf81-9fd42b776f9f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting Flask-Cors\n","  Downloading flask_cors-6.0.1-py3-none-any.whl.metadata (5.3 kB)\n","Requirement already satisfied: flask>=0.9 in /usr/local/lib/python3.12/dist-packages (from Flask-Cors) (3.1.2)\n","Requirement already satisfied: Werkzeug>=0.7 in /usr/local/lib/python3.12/dist-packages (from Flask-Cors) (3.1.3)\n","Requirement already satisfied: blinker>=1.9.0 in /usr/local/lib/python3.12/dist-packages (from flask>=0.9->Flask-Cors) (1.9.0)\n","Requirement already satisfied: click>=8.1.3 in /usr/local/lib/python3.12/dist-packages (from flask>=0.9->Flask-Cors) (8.2.1)\n","Requirement already satisfied: itsdangerous>=2.2.0 in /usr/local/lib/python3.12/dist-packages (from flask>=0.9->Flask-Cors) (2.2.0)\n","Requirement already satisfied: jinja2>=3.1.2 in /usr/local/lib/python3.12/dist-packages (from flask>=0.9->Flask-Cors) (3.1.6)\n","Requirement already satisfied: markupsafe>=2.1.1 in /usr/local/lib/python3.12/dist-packages (from flask>=0.9->Flask-Cors) (3.0.2)\n","Downloading flask_cors-6.0.1-py3-none-any.whl (13 kB)\n","Installing collected packages: Flask-Cors\n","Successfully installed Flask-Cors-6.0.1\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"029e464d","executionInfo":{"status":"ok","timestamp":1757095004593,"user_tz":-330,"elapsed":3101,"user":{"displayName":"Sharmaatha Naren","userId":"01097111190128934197"}},"outputId":"adcaa645-52cc-43b5-e89b-b1f9bf9de1a2"},"source":["!npm install -g localtunnel"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1G\u001b[0K⠙\u001b[1G\u001b[0K⠹\u001b[1G\u001b[0K⠸\u001b[1G\u001b[0K⠼\u001b[1G\u001b[0K⠴\u001b[1G\u001b[0K⠦\u001b[1G\u001b[0K⠧\u001b[1G\u001b[0K⠇\u001b[1G\u001b[0K⠏\u001b[1G\u001b[0K⠋\u001b[1G\u001b[0K⠙\u001b[1G\u001b[0K⠹\u001b[1G\u001b[0K⠸\u001b[1G\u001b[0K⠼\u001b[1G\u001b[0K⠴\u001b[1G\u001b[0K⠦\u001b[1G\u001b[0K⠧\u001b[1G\u001b[0K⠇\u001b[1G\u001b[0K⠏\u001b[1G\u001b[0K⠋\u001b[1G\u001b[0K⠙\u001b[1G\u001b[0K⠹\u001b[1G\u001b[0K⠸\u001b[1G\u001b[0K⠼\u001b[1G\u001b[0K\n","added 22 packages in 3s\n","\u001b[1G\u001b[0K⠼\u001b[1G\u001b[0K\n","\u001b[1G\u001b[0K⠼\u001b[1G\u001b[0K3 packages are looking for funding\n","\u001b[1G\u001b[0K⠼\u001b[1G\u001b[0K  run `npm fund` for details\n","\u001b[1G\u001b[0K⠼\u001b[1G\u001b[0K"]}]},{"cell_type":"code","source":["#AI PIPELINE PROJECT\n","\n","#FRONTEND\n","import os\n","os.environ[\"DISABLE_COLAB_DEBUGPY_REPR\"] = \"1\"\n","import io\n","import time\n","import subprocess\n","import threading\n","import json\n","from flask import Flask, request, jsonify, render_template_string\n","from PIL import Image\n","from ultralytics import YOLO\n","import numpy as np\n","from sklearn.cluster import MiniBatchKMeans\n","def convert_to_serializable(obj):\n","    \"\"\"Recursively convert numpy types to native Python types (for JSON).\"\"\"\n","    if isinstance(obj, np.generic):  # numpy.int64, numpy.float32 etc.\n","        return obj.item()\n","    if isinstance(obj, dict):\n","        return {k: convert_to_serializable(v) for k, v in obj.items()}\n","    if isinstance(obj, list):\n","        return [convert_to_serializable(i) for i in obj]\n","    return obj\n","\n","\n","# HTML, CSS, and JavaScript for the frontend.\n","HTML_CONTENT = \"\"\"\n","<!DOCTYPE html>\n","<html lang=\"en\">\n","<head>\n","    <meta charset=\"UTF-8\">\n","    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n","    <title>Object Clustering App</title>\n","    <script src=\"https://cdn.tailwindcss.com\"></script>\n","    <style>\n","        body {\n","            font-family: 'Inter', sans-serif;\n","            background-color: #f3f4f6;\n","        }\n","    </style>\n","</head>\n","<body class=\"bg-gray-100 min-h-screen flex items-center justify-center p-4\">\n","    <div class=\"bg-white p-8 rounded-2xl shadow-lg w-full max-w-2xl\">\n","        <h1 class=\"text-3xl font-bold text-center mb-6 text-gray-800\">Object Clustering App</h1>\n","        <p class=\"text-center text-gray-600 mb-8\">\n","            Upload an image to detect objects and see their clusters.\n","        </p>\n","\n","        <!-- Image Upload Form -->\n","        <form id=\"uploadForm\" class=\"flex flex-col items-center space-y-4\">\n","            <div class=\"w-full\">\n","                <label for=\"imageUpload\" class=\"block text-gray-700 font-medium mb-2\">Select Image</label>\n","                <div class=\"flex items-center justify-center w-full\">\n","                    <label for=\"imageUpload\" class=\"flex flex-col items-center justify-center w-full h-48 border-2 border-gray-300 border-dashed rounded-xl cursor-pointer bg-gray-50 hover:bg-gray-100 transition-colors\">\n","                        <div class=\"flex flex-col items-center justify-center pt-5 pb-6\">\n","                            <svg class=\"w-10 h-10 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n","                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16a4 0 01-4-4v-1a4 0 014-4h14a4 0 014 4v1a4 0 01-4 4h-10a2 2 0 00-2 2v1m0 0a2 2 0 002 2h10m-10-6a2 2 0 00-2-2h-2m-2-2v-2m4 4v-2m-2 2h2m-2-2h-2\"></path>\n","                            </svg>\n","                            <p class=\"mb-2 text-sm text-gray-500\"><span class=\"font-semibold\">Click to upload</span> or drag and drop</p>\n","                            <p class=\"text-xs text-gray-500\">PNG, JPG, JPEG</p>\n","                        </div>\n","                        <input id=\"imageUpload\" type=\"file\" class=\"hidden\" accept=\"image/png, image/jpeg, image/jpg\" />\n","                    </label>\n","                </div>\n","            </div>\n","            <button type=\"submit\" id=\"submitButton\" class=\"w-full px-6 py-3 bg-blue-600 text-white rounded-xl font-semibold shadow-md hover:bg-blue-700 transition-colors duration-300 disabled:bg-blue-300\">\n","                Analyze Image\n","            </button>\n","        </form>\n","\n","        <!-- Loading Indicator -->\n","        <div id=\"loadingIndicator\" class=\"hidden text-center mt-6\">\n","            <div class=\"animate-spin rounded-full h-12 w-12 border-4 border-dashed border-blue-500 border-t-transparent mx-auto\"></div>\n","            <p class=\"mt-4 text-gray-600\">Analyzing image...</p>\n","        </div>\n","\n","        <!-- Results Display Area -->\n","        <div id=\"results\" class=\"hidden mt-8\">\n","            <h2 class=\"text-2xl font-bold text-gray-800 mb-4 text-center\">Clustering Results</h2>\n","            <div id=\"detectionCount\" class=\"text-lg font-semibold text-gray-700 text-center\"></div>\n","            <div id=\"clustersCount\" class=\"text-lg font-semibold text-gray-700 text-center\"></div>\n","            <div class=\"mt-6 flex flex-wrap justify-center gap-4\">\n","                <div id=\"imageDisplay\" class=\"rounded-xl shadow-md border border-gray-200\"></div>\n","                <div id=\"resultText\" class=\"w-full p-4 bg-gray-50 rounded-xl border border-gray-200 overflow-auto\">\n","                    <pre class=\"whitespace-pre-wrap text-sm text-gray-700\"></pre>\n","                </div>\n","            </div>\n","        </div>\n","\n","        <!-- Error/Message Modal -->\n","        <div id=\"messageModal\" class=\"hidden fixed inset-0 bg-gray-900 bg-opacity-50 flex items-center justify-center p-4\">\n","            <div class=\"bg-white p-6 rounded-xl shadow-lg max-w-sm w-full text-center\">\n","                <h3 id=\"modalTitle\" class=\"text-xl font-semibold mb-3\"></h3>\n","                <p id=\"modalMessage\" class=\"text-gray-700 mb-4\"></p>\n","                <button onclick=\"closeModal()\" class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\">OK</button>\n","            </div>\n","        </div>\n","    </div>\n","\n","    <script>\n","        document.addEventListener('DOMContentLoaded', () => {\n","            const uploadForm = document.getElementById('uploadForm');\n","            const imageUpload = document.getElementById('imageUpload');\n","            const submitButton = document.getElementById('submitButton');\n","            const loadingIndicator = document.getElementById('loadingIndicator');\n","            const resultsDiv = document.getElementById('results');\n","            const imageDisplayDiv = document.getElementById('imageDisplay');\n","            const detectionCountDiv = document.getElementById('detectionCount');\n","            const clustersCountDiv = document.getElementById('clustersCount');\n","            const resultTextPre = document.querySelector('#resultText pre');\n","            const messageModal = document.getElementById('messageModal');\n","            const modalTitle = document.getElementById('modalTitle');\n","            const modalMessage = document.getElementById('modalMessage');\n","\n","            let originalImage = null;\n","            let currentImageURL = null;\n","\n","            // Handling file selection\n","            imageUpload.addEventListener('change', (event) => {\n","                const file = event.target.files[0];\n","                if (file) {\n","                    originalImage = file;\n","                    if (currentImageURL) {\n","                        URL.revokeObjectURL(currentImageURL);\n","                    }\n","                    currentImageURL = URL.createObjectURL(file);\n","                    imageDisplayDiv.innerHTML = `<img src=\"${currentImageURL}\" class=\"rounded-xl max-w-full h-auto object-contain\">`;\n","                    resultsDiv.classList.add('hidden');\n","                    submitButton.disabled = false;\n","                }\n","            });\n","\n","            // Handling form submission\n","            uploadForm.addEventListener('submit', async (e) => {\n","                e.preventDefault();\n","\n","                if (!originalImage) {\n","                    showMessageModal(\"Error\", \"Please select an image file first.\");\n","                    return;\n","                }\n","\n","                submitButton.disabled = true;\n","                loadingIndicator.classList.remove('hidden');\n","                resultsDiv.classList.add('hidden');\n","\n","                const formData = new FormData();\n","                formData.append('image', originalImage);\n","\n","                try {\n","                    const response = await fetch('/cluster_detections', {\n","                        method: 'POST',\n","                        body: formData\n","                    });\n","\n","                    if (!response.ok) {\n","                        const errorData = await response.json();\n","                        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n","                    }\n","\n","                    const result = await response.json();\n","                    displayResults(result);\n","                } catch (error) {\n","                    console.error('Error:', error);\n","                    showMessageModal(\"Error\", \"An error occurred while processing the image. Please try again.\");\n","                } finally {\n","                    loadingIndicator.classList.add('hidden');\n","                    submitButton.disabled = false;\n","                }\n","            });\n","\n","            function displayResults(data) {\n","                resultTextPre.textContent = JSON.stringify(data, null, 2);\n","                detectionCountDiv.textContent = `Total Detections: ${data.num_detections}`;\n","                clustersCountDiv.textContent = `Number of Clusters: ${data.num_clusters}`;\n","\n","                // Drawing circles on the image\n","                const imageElement = imageDisplayDiv.querySelector('img');\n","                const canvas = document.createElement('canvas');\n","                const ctx = canvas.getContext('2d');\n","\n","                imageElement.onload = () => {\n","                    const imgWidth = imageElement.naturalWidth;\n","                    const imgHeight = imageElement.naturalHeight;\n","\n","                    canvas.width = imgWidth;\n","                    canvas.height = imgHeight;\n","                    ctx.drawImage(imageElement, 0, 0, imgWidth, imgHeight);\n","\n","                    const colors = [\n","                        '#ef4444', '#3b82f6', '#10b981', '#f97316', '#a855f7',\n","                        '#84cc16', '#ec4899', '#f59e0b', '#06b6d4', '#4c1d95'\n","                    ];\n","\n","                    data.clustered_boxes.forEach(box => {\n","                        const x = box.x_center_normalized * imgWidth;\n","                        const y = box.y_center_normalized * imgHeight;\n","                        const clusterLabel = box.cluster_label;\n","\n","                        ctx.beginPath();\n","                        ctx.arc(x, y, 10, 0, 2 * Math.PI);\n","                        ctx.fillStyle = colors[clusterLabel % colors.length];\n","                        ctx.fill();\n","                        ctx.strokeStyle = '#FFFFFF';\n","                        ctx.lineWidth = 2;\n","                        ctx.stroke();\n","\n","                        ctx.fillStyle = '#FFFFFF';\n","                        ctx.font = '14px Arial';\n","                        ctx.textAlign = 'center';\n","                        ctx.textBaseline = 'middle';\n","                        ctx.fillText(clusterLabel, x, y);\n","                    });\n","\n","                    imageDisplayDiv.innerHTML = '';\n","                    imageDisplayDiv.appendChild(canvas);\n","                };\n","                resultsDiv.classList.remove('hidden');\n","            }\n","\n","            function showMessageModal(title, message) {\n","                modalTitle.textContent = title;\n","                modalMessage.textContent = message;\n","                messageModal.classList.add('hidden');\n","            }\n","\n","            window.closeModal = function() {\n","                messageModal.classList.add('hidden');\n","            };\n","        });\n","    </script>\n","</body>\n","</html>\n","\"\"\"\n","\n","\n","\n","#AI PIPELINE BACKEND\n","# Loading the YOLOv8 model once\n","try:\n","    model = YOLO(\"yolov8n.pt\")\n","    print(\"YOLOv8 model loaded successfully.\")\n","except Exception as e:\n","    print(f\"Error loading YOLO model: {e}\")\n","    model = None\n","\n","def kmeans_clustering(boxes, k=4):\n","    \"\"\"Performs K-Means clustering on the center coordinates of bounding boxes.\"\"\"\n","    if not boxes:\n","        return [], 0\n","\n","    centers = np.array([[box['x_center_normalized'], box['y_center_normalized']] for box in boxes])\n","\n","    # Adjusting k if there are fewer boxes than clusters\n","    k = min(k, len(centers))\n","\n","    if k < 2:\n","        # If there's only 1 detection, assigning it to cluster 0\n","        for box in boxes:\n","            box['cluster_label'] = 0\n","        return boxes, 1\n","\n","    kmeans = MiniBatchKMeans(n_clusters=k, random_state=0, n_init='auto')\n","    labels = kmeans.fit_predict(centers)\n","\n","    for i, box in enumerate(boxes):\n","        box['cluster_label'] = int(labels[i])\n","\n","    return boxes, kmeans.n_clusters\n","\n","\n","\n","def process_image(image_bytes):\n","    \"\"\"Processes an image to detect objects and perform clustering.\"\"\"\n","    if not model:\n","        raise RuntimeError(\"YOLO model not loaded.\")\n","\n","    # Converting bytes to a PIL Image\n","    img = Image.open(io.BytesIO(image_bytes))\n","\n","    # Runs YOLOv8 inference\n","    results = model(img)\n","\n","    # Extract bounding box information\n","    detected_boxes = []\n","    for result in results:\n","        if hasattr(result, 'boxes'):\n","            for box in result.boxes.xyxyn.cpu().numpy():\n","                x_min, y_min, x_max, y_max = box\n","                detected_boxes.append({\n","                    'x_center_normalized': (x_min + x_max) / 2,\n","                    'y_center_normalized': (y_min + y_max) / 2,\n","                    'class_id': 0,\n","                })\n","\n","    # Performs clustering\n","    if detected_boxes:\n","        clustered_boxes, num_clusters = kmeans_clustering(detected_boxes)\n","    else:\n","        clustered_boxes = []\n","        num_clusters = 0\n","\n","    return {\n","        'num_detections': len(detected_boxes),\n","        'num_clusters': num_clusters,\n","        'clustered_boxes': clustered_boxes\n","    }\n","\n","\n","def create_app():\n","    \"\"\"Creates a new Flask app instance with all routes registered.\"\"\"\n","    app = Flask(__name__)\n","    from flask_cors import CORS\n","    CORS(app)\n","\n","    @app.route(\"/\")\n","    def home():\n","        return render_template_string(HTML_CONTENT)\n","\n","    @app.route(\"/cluster_detections\", methods=[\"POST\"])\n","    def cluster_detections():\n","        try:\n","            # 1️⃣ Get the uploaded image\n","            image_file = request.files[\"image\"]\n","\n","            # Run YOLO + clustering\n","            # Calling the process_image function here\n","            image_bytes = image_file.read()\n","            results = process_image(image_bytes)\n","\n","            # Converting to serializable Python types\n","            return jsonify(convert_to_serializable(results))\n","        except Exception as e:\n","            print(f\"Error during image processing: {e}\")\n","            return jsonify({\"error\": str(e)}), 500\n","\n","    return app\n","\n","def run_ngrok_tunnel(port):\n","    \"\"\"Creates a public URL for the Flask app using ngrok CLI.\"\"\"\n","    print(\"Starting a public tunnel...\")\n","\n","    process = subprocess.Popen(\n","        ['ngrok', 'http', str(port), '--log=stdout'],\n","        stdout=subprocess.PIPE,\n","        stderr=subprocess.STDOUT,\n","        text=True\n","    )\n","\n","    for line in process.stdout:\n","        if \"url=\" in line:\n","            # Extract the ngrok public URL from the output\n","            start = line.find(\"url=\") + 4\n","            public_url = line[start:].strip()\n","            print(f\"🚀 Flask app is now public at: {public_url}\")\n","            print(\"Click this link to open the app in your browser.\")\n","            break\n","\n","\n","if __name__ == '__main__':\n","    app = create_app()\n","    PORT = 5000\n","\n","    # Starting the tunnel in a separate thread\n","    tunnel_thread = threading.Thread(target=run_ngrok_tunnel, args=(PORT,))\n","    tunnel_thread.daemon = True\n","    tunnel_thread.start()\n","\n","    # Giving the tunnel a moment to start and print its URL\n","    time.sleep(5)\n","\n","    app.run(port=PORT, host='0.0.0.0', threaded=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wpWYEVAzC6hm","executionInfo":{"status":"ok","timestamp":1757097290502,"user_tz":-330,"elapsed":367982,"user":{"displayName":"Sharmaatha Naren","userId":"01097111190128934197"}},"outputId":"d1212d97-3c9e-44ee-a98e-2090c6af755d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["YOLOv8 model loaded successfully.\n","Starting a public tunnel...\n","🚀 Flask app is now public at: https://00290db2caca.ngrok-free.app\n","Click this link to open the app in your browser.\n"," * Serving Flask app '__main__'\n"," * Debug mode: off\n"]},{"output_type":"stream","name":"stderr","text":["INFO:werkzeug:\u001b[31m\u001b[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.\u001b[0m\n"," * Running on all addresses (0.0.0.0)\n"," * Running on http://127.0.0.1:5000\n"," * Running on http://172.28.0.12:5000\n","INFO:werkzeug:\u001b[33mPress CTRL+C to quit\u001b[0m\n","INFO:werkzeug:127.0.0.1 - - [05/Sep/2025 18:29:46] \"GET / HTTP/1.1\" 200 -\n","INFO:werkzeug:127.0.0.1 - - [05/Sep/2025 18:29:47] \"\u001b[33mGET /favicon.ico HTTP/1.1\u001b[0m\" 404 -\n"]},{"output_type":"stream","name":"stdout","text":["\n","0: 384x640 1 book, 261.5ms\n","Speed: 6.8ms preprocess, 261.5ms inference, 2.4ms postprocess per image at shape (1, 3, 384, 640)\n"]},{"output_type":"stream","name":"stderr","text":["INFO:werkzeug:127.0.0.1 - - [05/Sep/2025 18:29:59] \"POST /cluster_detections HTTP/1.1\" 200 -\n"]},{"output_type":"stream","name":"stdout","text":["\n","0: 640x384 26 bottles, 1 refrigerator, 286.6ms\n","Speed: 6.2ms preprocess, 286.6ms inference, 5.2ms postprocess per image at shape (1, 3, 640, 384)\n"]},{"output_type":"stream","name":"stderr","text":["INFO:werkzeug:127.0.0.1 - - [05/Sep/2025 18:31:25] \"POST /cluster_detections HTTP/1.1\" 200 -\n"]},{"output_type":"stream","name":"stdout","text":["\n","0: 640x480 1 refrigerator, 234.9ms\n","Speed: 14.6ms preprocess, 234.9ms inference, 1.9ms postprocess per image at shape (1, 3, 640, 480)\n"]},{"output_type":"stream","name":"stderr","text":["INFO:werkzeug:127.0.0.1 - - [05/Sep/2025 18:33:29] \"POST /cluster_detections HTTP/1.1\" 200 -\n"]},{"output_type":"stream","name":"stdout","text":["\n","0: 640x480 1 refrigerator, 194.2ms\n","Speed: 3.8ms preprocess, 194.2ms inference, 1.6ms postprocess per image at shape (1, 3, 640, 480)\n"]},{"output_type":"stream","name":"stderr","text":["INFO:werkzeug:127.0.0.1 - - [05/Sep/2025 18:33:40] \"POST /cluster_detections HTTP/1.1\" 200 -\n"]},{"output_type":"stream","name":"stdout","text":["\n","0: 480x640 48 bottles, 212.1ms\n","Speed: 3.8ms preprocess, 212.1ms inference, 5.1ms postprocess per image at shape (1, 3, 480, 640)\n"]},{"output_type":"stream","name":"stderr","text":["INFO:werkzeug:127.0.0.1 - - [05/Sep/2025 18:33:55] \"POST /cluster_detections HTTP/1.1\" 200 -\n"]}]}],"metadata":{"colab":{"provenance":[{"file_id":"1cED1SooMXtGs9F5Fcb11RDlAvLL3L5Pz","timestamp":1757097301485}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}